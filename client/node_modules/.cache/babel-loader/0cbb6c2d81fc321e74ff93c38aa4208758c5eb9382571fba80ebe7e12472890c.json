{"ast":null,"code":"var _jsxFileName = \"/Users/gurkiratsingh/Desktop/WEB 3 Projects/dapp-1/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport SimpleStorage from \"./contracts/simpleStorage.json\";\nimport Web3 from \"web3\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [state, setState] = useState({\n    web3: null,\n    contract: null\n  });\n  // const [inputText, setInputText] = useState('0');\n  const [acc, setAcc] = useState([]);\n  useEffect(() => {\n    const provider = new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\");\n    const template = async () => {\n      const web3 = new Web3(provider);\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = SimpleStorage.networks[networkId];\n      const contract = new web3.eth.Contract(SimpleStorage.abi, deployedNetwork.address);\n      setState({\n        web3: web3,\n        contract: contract\n      });\n    };\n    provider && template();\n  }, []);\n  const getAccounts = async () => {\n    const {\n      web3\n    } = state;\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n    setAcc(accounts);\n  };\n  const writeSM = async () => {\n    const value = document.querySelector(\"#data\").value;\n    const {\n      contract\n    } = state;\n    const write = await contract.methods.setter(value).send({\n      from: \"\"\n    });\n    console.log(write);\n  };\n\n  // useEffect(()=>{\n  //   const { contract } = state;\n  //   const readSM = async ()=>{\n  //     const read = await contract.methods.getter().call();\n  //     // setInputText(read);\n  //     console.log(read);\n  //   };\n  //   readSM();\n  // },[state])\n\n  const readSM = async () => {\n    const {\n      contract\n    } = state;\n    const read = await contract.methods.getter().call();\n    // setInputText(read);\n    console.log(read);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello world\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getAccounts,\n      children: \"Get accounts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: writeSM,\n      children: \"Set Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: readSM,\n      children: \"Get Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter your value\",\n      id: \"data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"these are the accounts\", acc.map(account => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: account\n        }, Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JGK8qJXKQnVy1wgd4Esg+iNVYeU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","SimpleStorage","Web3","jsxDEV","_jsxDEV","App","_s","state","setState","web3","contract","acc","setAcc","provider","providers","HttpProvider","template","networkId","eth","net","getId","deployedNetwork","networks","Contract","abi","address","getAccounts","accounts","console","log","writeSM","value","document","querySelector","write","methods","setter","send","from","readSM","read","getter","call","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","id","map","account","Math","random","_c","$RefreshReg$"],"sources":["/Users/gurkiratsingh/Desktop/WEB 3 Projects/dapp-1/client/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport SimpleStorage from \"./contracts/simpleStorage.json\";\nimport Web3 from \"web3\";\nimport \"./App.css\";\n\nfunction App() {\n  const [state, setState] = useState({\n    web3: null,\n    contract: null,\n  });\n  // const [inputText, setInputText] = useState('0');\n  const [acc,setAcc] = useState([])\n  useEffect(() => {\n    const provider = new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\");\n    const template = async () => {\n      const web3 = new Web3(provider);\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = SimpleStorage.networks[networkId];\n      const contract = new web3.eth.Contract(\n        SimpleStorage.abi,\n        deployedNetwork.address\n      );\n\n      setState({\n        web3: web3,\n        contract: contract,\n      });\n    };\n\n    provider && template();\n  }, []);\n\n  const getAccounts = async () => {\n    const { web3 } = state;\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts); \n    setAcc(accounts)\n  };\n  \n\n  const writeSM = async () => {\n    const value = document.querySelector(\"#data\").value;\n    const { contract } = state;\n    const write = await contract.methods\n      .setter(value)\n      .send({ from: \"\" });\n\n    console.log(write);\n  };\n\n  // useEffect(()=>{\n  //   const { contract } = state;\n  //   const readSM = async ()=>{\n  //     const read = await contract.methods.getter().call();\n  //     // setInputText(read);\n  //     console.log(read);\n  //   };\n  //   readSM();\n  // },[state])\n\n  const readSM = async ()=>{\n      const { contract } = state;\n      const read = await contract.methods.getter().call();\n      // setInputText(read);\n      console.log(read);\n    };\n  \n\n  return (\n    <div className=\"App\">\n      <h1>Hello world</h1>\n      <button onClick={getAccounts}>Get accounts</button>\n      <button onClick={writeSM}>Set Value</button>\n      {/* <button onClick={readSM}>Get Value</button> */}\n      <button onClick={readSM}>Get Value</button>\n      <br></br>\n      <br></br>\n      <input type=\"number\" placeholder=\"Enter your value\" id=\"data\"></input>\n      {/* <h2>This is the value : {inputText}</h2> */}\n      <p>these are the accounts\n        {acc.map((account)=>{\n          return (\n          <li  key={Math.random()}>{account}</li>\n          )\n        })}\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}